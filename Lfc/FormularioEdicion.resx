<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVFRUJFhYWmhYWFprWFhaa1hYWmtYWFprWFhaa1hYWmtYWFprWFhaa1hY
        WmtYWFprWFhaa1hYWmtYWFprWFhaa1hYWmtYWFprWFhaa1FRVEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFJSUiWNjY7o0tLS/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83N
        zf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/o6Oj+Hx8fGQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXl5ebNPT1P//////////////////////////////
        ///////////////////////////////////////////////////////////////////19fX/c3NztQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1tvzs7O////////////////////
        ////////7Ozs//////////////////////////////////////////////////////////////////Ly
        8v9sbGy8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW2/Ozs7/////////
        //////////////////9ubm7/XV1e/4eHh//S0tL/////////////////////////////////////////
        ////////8vLy/2xsbLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbb87O
        zv///////////////////////////5WVlf9HR0f/RkZH/1taWv9lZGX/mZmZ/93d3f//////////////
        ///////////////////y8vL/bGxsvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1tvzs7O////////////////////////////29vb/1tbW/9CQkP/QkJD/25ubv/Lysr/p6am/4OC
        gv+lpKT///////////////////////Ly8v9sbGy8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFtbW2/Ozs7/////////////////////////////////YmJj/0JCQ/9dXV3/xMPD/87N
        zf/Ozc3/zcvJ/7J2Lv+OdFb/////////////////8vLy/2xsbLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAW1tbb87Ozv////////////////////////////////+VlZX/eXl6/8bF
        xf/Ozc3/zs3N/87Lyf+1dCn/2HUA/9N0A/+Nc1X////////////y8vL/bGxsvAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1tvzs7O/////////////////////////////////+Dg
        4P+lpKX/zs3N/87Nzf/Oy8n/zoMp/8x2EP/YdQD/2HUA/9N0A/+MclT///////Ly8v9sbGy8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW2/Ozs7/////////////////////////
        /////////////4OCgv/Ozc3/zsvK/8eDMv//iwD//4sA/8x2EP/YdQD/2HUA/9N0A/+MclP/8vLy/2xs
        bLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbb87Ozv//////////////
        ////////////////////////np6e/8rHxv/OjkP/6ZEr/+2GC///iwD//4sA/8x2EP/YdQD/2HUA/9N0
        A/+Jb1D/bGxsvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1tvzs7O////
        ///////////////////////////////////u7u7/p39R//+cKP//nCj/6ZEr/+2GC///iwD//4sA/8x2
        EP/YdQD/2HUA/9N0A/9wUzXzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtb
        W2/Ozs7////////////////////////////////////////////k4uH/wYE2//+cKP//nCj/6ZEr/+2G
        C///iwD//4sA/8x2EP/YdQD/2HUA/9JzAv9yUSzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAW1tbb87Ozv/////////////////////////////////////////////////a2Nf/wYE2//+c
        KP//nCj/6ZEr/+2GC///iwD//4sA/8x2EP/YdQD/2HUA/9JzAv9yUS3UAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABbW1tvzs7O////////////////////////////////////////////////////
        ///c2tn/wYE2//+cKP//nCj/6ZEr/+2GC///iwD//4sA/8x2EP/YdQD/2HUA/9JzAv9xUi3WAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW2/Ozs7/////////////////////////////////////////
        ///////////////////c2tr/wYE3//+cKP//nCj/6ZEr/+2GC///iwD//4sA/8x2EP/YdQD/2HUA/9Jz
        Av9xUi3WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbb87Ozv//////////////////////////////
        ///////////////////////////////////d29r/wYE2//+cKP//nCj/6ZEr/+2GC///iwD//4sA/8x2
        EP/YdQD/2HUA/8lwBv5eWFPWAAAAAAAAAAAAAAAAAAAAAAAAAABcXFx2lpaX/7Cwsf+wsLH/sLCx/7Cw
        sf+wsLH/sLCx/7Cwsf/AwMH/9/f3///////////////////////f3dz/wYE2//+cKP//nCj/6ZEr/+2G
        C///iwD//4sA/8x2EP/PcgT/mIJo/4eGhv5BQUXLAAAAAAAAAAAAAAAAAAAAADMzMwVhYWL10NDQ/9XV
        1f/V1dX/1dXV/9XV1f/V1dX/1dXV/83Nzv+YmJj/+Pj4///////////////////////f3d3/wYE2//+c
        KP//nCj/6ZEr/+2GC///iwD/9YcE/52Faf+Mi4v/TExN/0FBQfpBQUOnAAAAAAAAAAAAAAAAAAAAAAAA
        AABra2zy9/f3//7+/v/+/v7//v7+//7+/v/+/v7//v7+/83Nzv/AwMH/////////////////////////
        ///g3t3/wYE2//+cKP//nCj/6ZEr/+SDEP+hh2j/jIuL/0xMTf9CQkP/QkJD/0FBQvdDQ0NiAAAAAAAA
        AAAAAAAAAAAAAAAAAABra2zy9/f3//7+/v/+/v7//v7+//7+/v/+/v7/1dXV/7Cwsf//////////////
        ///////////////////i4N//wYE2//+cKP/1lyr/oIlw/4yLi/9MTE3/QkJD/0JCQ/9CQkP/QkJC30xM
        TAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2zy9/f3//7+/v/+/v7//v7+//7+/v/V1dX/sLCx////
        ///////////////////////////////////j4eD/uX45/6GKcf+Mi4v/S0tM/0JCQ/9CQkP/QkJD/0BA
        Qfg/Pz8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2zy9/f3//7+/v/+/v7//v7+/9XV
        1f+wsLH////////////////////////////////////////////Y2Nj/b29v/UtLTP9CQkP/QkJD/0JC
        Q/9BQUL6VVVVAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2zy9/f3//7+
        /v/+/v7/1dXV/7Cwsf////////////////////////////////////////////Ly8v9iYmLFQkJD70JC
        Q/9CQkP/QkJD9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABra2zy9/f3//7+/v/V1dX/sLCx////////////////////////////////////////////8vLy/2xs
        bLxDQ0MiPz8/3EBAQ9EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABra2zy9/f3/9XV1f+wsLH/////////////////////////////////////////
        ///y8vL/bGxsvAAAAABFRUULAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2zy0NDQ/7Cwsf//////////////////////////////
        //////////////X19f9zc3O1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGH1m5uc/87Ozv/Ozs7/zs7O/87O
        zv/Ozs7/zs7O/87Ozv/Ozs7/pKSl+X5+fmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwVVVVWAW1tbb1tb
        W29bW1tvW1tbb1tbW29bW1tvW1tbb1tbW29ZWVlNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AAA/+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AA
        Af+AAAH/gAAB/4AAAf+AAAD/gAAAf4AAAD+AAAAfgAAAD4AAAAeAAAAD4AAAAfAAAAH4AAAD/AAAB/4A
        AB//AAA//4ABf//AAf//4AH//+AD//////8=
</value>
  </data>
</root>